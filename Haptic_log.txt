created by @MrWang_tju in 2018.11.30
Software of Haptic Project
code for STM32H743ZI

* 		mean will do
//*		mean have done
**		mean problem to solve
//**	mean problem have solved
$		discover
#		data record 

7.9
0.使用git控制版本迭代  此处log与git log 均可作为改动参考


5.11
0.解决5.8 *1 的计算问题 原因是  用arm_cos_f32替换 cos后 没有引入#include"arm_math.h"头文件！  编译器有警告，调用未定义函数
*1.添加重力反馈限制，添加运动学运算输出的数据范围 OutputDataCheck  -->有待进一步约束
*数据输出有误  1.先记录本组数据内容  2.尝试记录运算过程中的数据，找原因输出结果	
//*加 上一次运算是否结束检验--》全局变量  进行置位 -->完成
//*2.添加传入运动学运算的数据的范围  及时修正  InputDataCheck()
3.修复 FLASH 存储数据存在的问题  原来占用 Bank1 Sector1 存储  预留代码大小128k  实际代码大小 380k+  修改为Bank1 Sector7存储
//4.修改TIM16为 1ms 计时中断 250us中断判断计算完成后，开启下一次运算		--》效果不好  不稳定
*5需要测量  不同速度  不同位置姿态下的计算需要的时间

$只要是运算结果对  一般 alpha beta gama 不会超出+-pi的范围  之前运算时间长的原因是，雅克比矩阵计算错误，导致diff_var极大
从而 var变量超出pi的范围  加减pi运算效率低  运算时间过长
$不同位置 动的速度不同  导致迭代次数不同  简单测量  最长需要100ms 
#开启单精度FPU  进行double变量运算  --》230ms 一次
开启双精度FPU 进行double变量运算   --》11.5ms
开启DSP 不开250us中断    			--》8ms  LoopTime = 4
开启DSP 开启250us中断				--》8.7ms 


5.8
0.解决计算出错问题
之前存在：a.雅克比计算不准确      b.全局变量被修改、printf到固定位置之后不输出    c.迭代计算  和电脑之间误差大
问题解决--》1.在kinematic文件中进行计算雅克比之前，没有为变量赋初值   在mian 中 要调用 varInit函数   2.全局变量被修改  仍然是堆栈问题  RAM中存储  静态存储区+栈区（stack）+ 堆区（Heap）
栈区存放临时变量，堆区使用malloc free等函数  由程序员进行内存管理    栈由 _initcal_sp 向下生长  堆区由_initcal_sp向上生长   栈区溢出时，会先占用堆区存储位置   若栈区占用空间过多，则继续生长
导致全局变量被修改	   3.计算过程中  利用到了eye单位矩阵  用指针对矩阵内容先进行置零操作  但是*ptr = 0; 忘记移动指针  应该为 *(ptr+i) =0;

//*1.q1 - q3给固定值 计算没问题  实时更新q值  计算不对  且，出现diff_var值特别大的情况

4.20
0.移植正解到单片机  不能正确解算    有堆区溢出问题   在程序malloc时  全局变量被修改

*1.单片机-》电脑  协议 增加错误状态显示位  
Error_Uart3RX			(1U<<4)		//单片机收到校验失败的数据  或一定时间内没有收到新数据（数据序列在一定时间内不变化）
Error_Uart3TX			(1U<<5)		//可以由上位机置位
Error_UART3RXOutRange	(1U<<6)		//单片机接收到的  电机力的数据  超出范围
**a.单片机 UART3不稳定


201.4.16
0.排除 UART3接收函数部分  check 搞错的问题！！  check多加了一位  导致每100次 接收到一次更新数据

2019.4.13
*0.添加控制串口的重力补偿电机反馈功能   反馈力
*1.计算PWM观测   不使能电机  只输出当前计算得出的PWM数据  用于调试观测

2019.4.10
0.将UART3作为数据通讯串口  传输P副当前长度  上位机返回计算结果

2019.3.2
0.完善FLASH参数表  可通过协议修改  初始化
1.惯性力部分代码  修改 调整  但是仍然有震动

2019.25-2
0.添加UART3  用作输出运行时的数据

2019.2.25
0.添加协议控制  各类力补偿开关
1.添加加速度检测功能
2.添加惯性力补偿功能  --》有问题  静止时候有震荡  1电机最明显

2019.1.27
0.FLASH部分  调通FLASH写入、擦除   原子代码有问题

2019.1.26
0.创建motor.c .h文件 拆分tim_ctrl.c文件   代码及变量注释
1.推拉方向 补偿力随速度变化  一次函数

2019.1.19
0.排查出TIM4 TIM5 中断未打开的bug  排除bug后，编码器计数准确  --》未打开中断，导致溢出的计数变量不能正确计数
1.完成python端编码器数据回读
2.速度、运动状态监测
3.推、拉方向加力
4.按键清空编码器计数值
5.修改TIM1 CH2  默认极性为低



2019.1.18
0.完成编码器数据处理
1.修改设置pwm协议  库函数

2019.1.15
0.测试三个编码器   TIM3对应的编码器 程序有问题  和其他两个相差大，数据转换的问题


2018.11.30  22:14
0.测试TIM1  三路输出100MHz  PWM   CH1->PE9  CH2->PE11  CH3->PE13
1.测试TIM3 Encoder计数模式	
PA6  -> TIM3_CH1   
PC7  -> TIM3_CH2
PD12     ------> TIM4_CH1
PD13     ------> TIM4_CH2 
PA0     ------> TIM5_CH1
PA1     ------> TIM5_CH2 
2.测试USART2完成		PA3     ------> USART2_RX
    				PD5     ------> USART2_TX 
    				PC0				EN_BOARD
    				PC3				EN_MOTOR
    				PF3				FAU
3.驱动板上电测试完成

12.06
0.占空比给49.6  电机开始反转   给50.4  电机开始正转
1.电脑端 python 驱动串口完成
2.

Tar： 实现python函数库 控制电机使能状态、输出力、读取编码器值



